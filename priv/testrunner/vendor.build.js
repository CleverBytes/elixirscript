import os from'os';class Tuple{constructor(...a){this.values=Object.freeze(a),this.length=this.values.length}get(a){return this.values[a]}count(){return this.values.length}[Symbol.iterator](){return this.values[Symbol.iterator]()}toString(){let a,b='';for(a=0;a<this.values.length;a++){''!=b&&(b+=', ');const c=this.values[a]?this.values[a].toString():'';b+=c}return'{'+b+'}'}put_elem(a,b){if(a===this.length){let a=this.values.concat([b]);return new Tuple(...a)}let c=this.values.concat([]);return c.splice(a,0,b),new Tuple(...c)}remove_elem(a){let b=this.values.concat([]);return b.splice(a,1),new Tuple(...b)}}let process_counter=-1;class PID{constructor(){++process_counter,this.id=process_counter}toString(){return'PID#<0.'+this.id+'.0>'}}let ref_counter=-1;class Reference{constructor(){++ref_counter,this.id=ref_counter,this.ref=Symbol()}toString(){return'Ref#<0.0.0.'+this.id+'>'}}class BitString{constructor(...a){this.value=Object.freeze(this.process(a)),this.length=this.value.length,this.bit_size=8*this.length,this.byte_size=this.length}get(a){return this.value[a]}count(){return this.value.length}slice(a,b=null){let c=this.value.slice(a,b),d=c.map((a)=>BitString.integer(a));return new BitString(...d)}[Symbol.iterator](){return this.value[Symbol.iterator]()}toString(){var a,b='';for(a=0;a<this.count();a++)''!=b&&(b+=', '),b+=this.get(a).toString();return'<<'+b+'>>'}process(a){let b=[];var c;for(c=0;c<a.length;c++){let d=this['process_'+a[c].type](a[c]);for(let b of a[c].attributes)d=this['process_'+b](d);b=b.concat(d)}return b}process_integer(a){return a.value}process_float(a){if(64===a.size)return BitString.float64ToBytes(a.value);if(32===a.size)return BitString.float32ToBytes(a.value);throw new Error('Invalid size for float')}process_bitstring(a){return a.value.value}process_binary(a){return BitString.toUTF8Array(a.value)}process_utf8(a){return BitString.toUTF8Array(a.value)}process_utf16(a){return BitString.toUTF16Array(a.value)}process_utf32(a){return BitString.toUTF32Array(a.value)}process_signed(a){return new Uint8Array([a])[0]}process_unsigned(a){return a}process_native(a){return a}process_big(a){return a}process_little(a){return a.reverse()}process_size(a){return a}process_unit(a){return a}static integer(a){return BitString.wrap(a,{type:'integer',unit:1,size:8})}static float(a){return BitString.wrap(a,{type:'float',unit:1,size:64})}static bitstring(a){return BitString.wrap(a,{type:'bitstring',unit:1,size:a.bit_size})}static bits(a){return BitString.bitstring(a)}static binary(a){return BitString.wrap(a,{type:'binary',unit:8,size:a.length})}static bytes(a){return BitString.binary(a)}static utf8(a){return BitString.wrap(a,{type:'utf8',unit:1,size:a.length})}static utf16(a){return BitString.wrap(a,{type:'utf16',unit:1,size:2*a.length})}static utf32(a){return BitString.wrap(a,{type:'utf32',unit:1,size:4*a.length})}static signed(a){return BitString.wrap(a,{},'signed')}static unsigned(a){return BitString.wrap(a,{},'unsigned')}static native(a){return BitString.wrap(a,{},'native')}static big(a){return BitString.wrap(a,{},'big')}static little(a){return BitString.wrap(a,{},'little')}static size(a,b){return BitString.wrap(a,{size:b})}static unit(a,b){return BitString.wrap(a,{unit:b})}static wrap(a,b,c=null){let d=a;return a instanceof Object||(d={value:a,attributes:[]}),d=Object.assign(d,b),c&&d.attributes.push(c),d}static toUTF8Array(a){for(var b,c=[],d=0;d<a.length;d++)b=a.charCodeAt(d),128>b?c.push(b):2048>b?c.push(192|b>>6,128|63&b):55296>b||57344<=b?c.push(224|b>>12,128|63&b>>6,128|63&b):(d++,b=65536+((1023&b)<<10|1023&a.charCodeAt(d)),c.push(240|b>>18,128|63&b>>12,128|63&b>>6,128|63&b));return c}static toUTF16Array(a){for(var b,c=[],d=0;d<a.length;d++)b=a.codePointAt(d),255>=b?(c.push(0),c.push(b)):(c.push(255&b>>8),c.push(255&b));return c}static toUTF32Array(a){for(var b,c=[],d=0;d<a.length;d++)b=a.codePointAt(d),255>=b?(c.push(0),c.push(0),c.push(0),c.push(b)):(c.push(0),c.push(0),c.push(255&b>>8),c.push(255&b));return c}//http://stackoverflow.com/questions/2003493/javascript-float-from-to-bits
static float32ToBytes(a){var b=[],c=new ArrayBuffer(4);new Float32Array(c)[0]=a;let d=new Uint32Array(c)[0];return b.push(255&d>>24),b.push(255&d>>16),b.push(255&d>>8),b.push(255&d),b}static float64ToBytes(a){var b=[],c=new ArrayBuffer(8);new Float64Array(c)[0]=a;var d=new Uint32Array(c)[0],e=new Uint32Array(c)[1];return b.push(255&e>>24),b.push(255&e>>16),b.push(255&e>>8),b.push(255&e),b.push(255&d>>24),b.push(255&d>>16),b.push(255&d>>8),b.push(255&d),b}}var ErlangTypes={Tuple,PID,Reference,BitString};function createCommonjsModule(a,b){return b={exports:{}},a(b,b.exports),b.exports}var matchOperatorsRe=/[|\\{}()[\]^$+*?.]/g,escapeStringRegexp=function(a){if('string'!=typeof a)throw new TypeError('Expected a string');return a.replace(matchOperatorsRe,'\\$&')},colorName={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},conversions=createCommonjsModule(function(a){/**
  * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
  * */function comparativeDistance(a,b){return f(a[0]-b[0],2)+f(a[1]-b[1],2)+f(a[2]-b[2],2)}var c=Math.round,d=Math.PI,e=Math.floor,f=Math.pow,i=Math.max,j=Math.min,b={};/* MIT license */// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)
for(var g in colorName)colorName.hasOwnProperty(g)&&(b[colorName[g]]=g);var k=a.exports={rgb:{channels:3,labels:'rgb'},hsl:{channels:3,labels:'hsl'},hsv:{channels:3,labels:'hsv'},hwb:{channels:3,labels:'hwb'},cmyk:{channels:4,labels:'cmyk'},xyz:{channels:3,labels:'xyz'},lab:{channels:3,labels:'lab'},lch:{channels:3,labels:'lch'},hex:{channels:1,labels:['hex']},keyword:{channels:1,labels:['keyword']},ansi16:{channels:1,labels:['ansi16']},ansi256:{channels:1,labels:['ansi256']},hcg:{channels:3,labels:['h','c','g']},apple:{channels:3,labels:['r16','g16','b16']},gray:{channels:1,labels:['gray']}};// hide .channels and .labels properties
for(var h in k)if(k.hasOwnProperty(h)){if(!('channels'in k[h]))throw new Error('missing channels property: '+h);if(!('labels'in k[h]))throw new Error('missing channel labels property: '+h);if(k[h].labels.length!==k[h].channels)throw new Error('channel and label counts mismatch: '+h);var l=k[h].channels,m=k[h].labels;delete k[h].channels,delete k[h].labels,Object.defineProperty(k[h],'channels',{value:l}),Object.defineProperty(k[h],'labels',{value:m})}k.rgb.hsl=function(a){var c,d,e,f=a[0]/255,h=a[1]/255,g=a[2]/255,b=j(f,h,g),k=i(f,h,g),l=k-b;return k===b?c=0:f===k?c=(h-g)/l:h===k?c=2+(g-f)/l:g===k&&(c=4+(f-h)/l),c=j(60*c,360),0>c&&(c+=360),e=(b+k)/2,d=k===b?0:0.5>=e?l/(k+b):l/(2-k-b),[c,100*d,100*e]},k.rgb.hsv=function(a){var c,d,e,f=a[0],h=a[1],g=a[2],b=j(f,h,g),k=i(f,h,g),l=k-b;return d=0===k?0:1e3*(l/k)/10,k===b?c=0:f===k?c=(h-g)/l:h===k?c=2+(g-f)/l:g===k&&(c=4+(f-h)/l),c=j(60*c,360),0>c&&(c+=360),e=1e3*(k/255)/10,[c,d,e]},k.rgb.hwb=function(a){var c=a[0],d=a[1],e=a[2],b=k.rgb.hsl(a)[0],f=1/255*j(c,j(d,e));return e=1-1/255*i(c,i(d,e)),[b,100*f,100*e]},k.rgb.cmyk=function(a){var d,c,e,f,h=a[0]/255,i=a[1]/255,g=a[2]/255;return f=j(1-h,1-i,1-g),d=(1-h-f)/(1-f)||0,c=(1-i-f)/(1-f)||0,e=(1-g-f)/(1-f)||0,[100*d,100*c,100*e,100*f]},k.rgb.keyword=function(a){var c=b[a];if(c)return c;var d,e=Infinity;for(var f in colorName)if(colorName.hasOwnProperty(f)){var g=colorName[f],h=comparativeDistance(a,g);// Compute comparative distance
// Check if its less, if so set as closest
h<e&&(e=h,d=f)}return d},k.keyword.rgb=function(a){return colorName[a]},k.rgb.xyz=function(a){var c=a[0]/255,d=a[1]/255,e=a[2]/255;// assume sRGB
c=0.04045<c?f((c+0.055)/1.055,2.4):c/12.92,d=0.04045<d?f((d+0.055)/1.055,2.4):d/12.92,e=0.04045<e?f((e+0.055)/1.055,2.4):e/12.92;var b=0.4124*c+0.3576*d+0.1805*e,g=0.2126*c+0.7152*d+0.0722*e,h=0.0193*c+0.1192*d+0.9505*e;return[100*b,100*g,100*h]},k.rgb.lab=function(c){var d,e,a,b=k.rgb.xyz(c),g=b[0],h=b[1],i=b[2];return g/=95.047,h/=100,i/=108.883,g=0.008856<g?f(g,1/3):7.787*g+16/116,h=0.008856<h?f(h,1/3):7.787*h+16/116,i=0.008856<i?f(i,1/3):7.787*i+16/116,d=116*h-16,e=500*(g-h),a=200*(h-i),[d,e,a]},k.hsl.rgb=function(a){var b,c,d,e,f,g=a[0]/360,h=a[1]/100,j=a[2]/100;if(0==h)return f=255*j,[f,f,f];c=0.5>j?j*(1+h):j+h-j*h,b=2*j-c,e=[0,0,0];for(var k=0;3>k;k++)d=g+1/3*-(k-1),0>d&&d++,1<d&&d--,f=1>6*d?b+6*(c-b)*d:1>2*d?c:2>3*d?b+6*((c-b)*(2/3-d)):b,e[k]=255*f;return e},k.hsl.hsv=function(a){var b,c,d=a[0],e=a[1]/100,f=a[2]/100,g=e,h=i(f,0.01);return f*=2,e*=1>=f?f:2-f,g*=1>=h?h:2-h,c=(f+e)/2,b=0==f?2*g/(h+g):2*e/(f+e),[d,100*b,100*c]},k.hsv.rgb=function(a){var b=a[0]/60,c=a[1]/100,d=a[2]/100,g=e(b)%6,h=b-e(b),f=255*d*(1-c),i=255*d*(1-c*h),j=255*d*(1-c*(1-h));return d*=255,0==g?[d,j,f]:1==g?[i,d,f]:2==g?[f,d,j]:3==g?[f,i,d]:4==g?[j,f,d]:5==g?[d,f,i]:void 0},k.hsv.hsl=function(a){var b,c,d,e=a[0],f=a[1]/100,g=a[2]/100,h=i(g,0.01);return d=(2-f)*g,b=(2-f)*h,c=f*h,c/=1>=b?b:2-b,c=c||0,d/=2,[e,100*c,100*d]},k.hwb.rgb=function(a){var c,d,i,f,j=a[0]/360,h=a[1]/100,k=a[2]/100,l=h+k;// wh + bl cant be > 1
1<l&&(h/=l,k/=l),c=e(6*j),d=1-k,i=6*j-c,0!=(1&c)&&(i=1-i),f=h+i*(d-h);// linear interpolation
var m,n,g;switch(c){default:case 6:case 0:m=d,n=f,g=h;break;case 1:m=f,n=d,g=h;break;case 2:m=h,n=d,g=f;break;case 3:m=h,n=f,g=d;break;case 4:m=f,n=h,g=d;break;case 5:m=d,n=h,g=f;}return[255*m,255*n,255*g]},k.cmyk.rgb=function(a){var d,e,f,b=a[0]/100,c=a[1]/100,g=a[2]/100,h=a[3]/100;return d=1-j(1,b*(1-h)+h),e=1-j(1,c*(1-h)+h),f=1-j(1,g*(1-h)+h),[255*d,255*e,255*f]},k.xyz.rgb=function(a){var c,d,e,b=a[0]/100,g=a[1]/100,h=a[2]/100;return c=3.2406*b+-1.5372*g+-0.4986*h,d=-0.9689*b+1.8758*g+0.0415*h,e=0.0557*b+-0.204*g+1.057*h,c=0.0031308<c?1.055*f(c,1/2.4)-0.055:12.92*c,d=0.0031308<d?1.055*f(d,1/2.4)-0.055:12.92*d,e=0.0031308<e?1.055*f(e,1/2.4)-0.055:12.92*e,c=j(i(0,c),1),d=j(i(0,d),1),e=j(i(0,e),1),[255*c,255*d,255*e]},k.xyz.lab=function(c){var d,e,a,b=c[0],g=c[1],h=c[2];return b/=95.047,g/=100,h/=108.883,b=0.008856<b?f(b,1/3):7.787*b+16/116,g=0.008856<g?f(g,1/3):7.787*g+16/116,h=0.008856<h?f(h,1/3):7.787*h+16/116,d=116*g-16,e=500*(b-g),a=200*(g-h),[d,e,a]},k.lab.xyz=function(c){var d,e,g,h=c[0],i=c[1],a=c[2];e=(h+16)/116,d=i/500+e,g=e-a/200;var b=f(e,3),j=f(d,3),k=f(g,3);return e=0.008856<b?b:(e-16/116)/7.787,d=0.008856<j?j:(d-16/116)/7.787,g=0.008856<k?k:(g-16/116)/7.787,d*=95.047,e*=100,g*=108.883,[d,e,g]},k.lab.lch=function(e){var f,g,h,c=e[0],i=e[1],a=e[2];return f=Math.atan2(a,i),g=360*f/2/d,0>g&&(g+=360),h=Math.sqrt(i*i+a*a),[c,h,g]},k.lch.lab=function(e){var f,a,b,g=e[0],i=e[1],c=e[2];return b=2*(c/360)*d,f=i*Math.cos(b),a=i*Math.sin(b),[g,f,a]},k.rgb.ansi16=function(a){var d=a[0],e=a[1],f=a[2],b=1 in arguments?arguments[1]:k.rgb.hsv(a)[2];// hsv -> ansi16 optimization
if(b=c(b/50),0===b)return 30;var g=30+(c(f/255)<<2|c(e/255)<<1|c(d/255));return 2===b&&(g+=60),g},k.hsv.ansi16=function(a){// optimization here; we already know the value and don't need to get
// it converted for us.
return k.rgb.ansi16(k.hsv.rgb(a),a[2])},k.rgb.ansi256=function(a){var d=a[0],e=a[1],f=a[2];// we use the extended greyscale palette here, with the exception of
// black and white. normal palette only has 4 greyscale shades.
if(d===e&&e===f)return 8>d?16:248<d?231:c(24*((d-8)/247))+232;var b=16+36*c(5*(d/255))+6*c(5*(e/255))+c(5*(f/255));return b},k.ansi16.rgb=function(a){var c=a%10;// handle greyscale
if(0==c||7==c)return 50<a&&(c+=3.5),c=255*(c/10.5),[c,c,c];var d=0.5*(~~(50<a)+1),e=255*((1&c)*d),f=255*((1&c>>1)*d),g=255*((1&c>>2)*d);return[e,f,g]},k.ansi256.rgb=function(a){// handle greyscale
if(232<=a){var d=10*(a-232)+8;return[d,d,d]}a-=16;var c,f=255*(e(a/36)/5),h=255*(e((c=a%36)/6)/5),g=255*(c%6/5);return[f,h,g]},k.rgb.hex=function(a){var b=((255&c(a[0]))<<16)+((255&c(a[1]))<<8)+(255&c(a[2])),d=b.toString(16).toUpperCase();return'000000'.substring(d.length)+d},k.hex.rgb=function(a){var b=a.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!b)return[0,0,0];var c=b[0];3===b[0].length&&(c=c.split('').map(function(a){return a+a}).join(''));var d=parseInt(c,16);return[255&d>>16,255&d>>8,255&d]},k.rgb.hcg=function(a){var c,d,e=a[0]/255,f=a[1]/255,g=a[2]/255,b=i(i(e,f),g),h=j(j(e,f),g),k=b-h;return c=1>k?h/(1-k):0,d=0>=k?0:b===e?(f-g)/k%6:b===f?2+(g-e)/k:4+(e-f)/k+4,d/=6,d%=1,[360*d,100*k,100*c]},k.hsl.hcg=function(a){var b=a[1]/100,d=a[2]/100,e=1,c=0;return e=0.5>d?2*b*d:2*b*(1-d),1>e&&(c=(d-0.5*e)/(1-e)),[a[0],100*e,100*c]},k.hsv.hcg=function(a){var b=a[1]/100,d=a[2]/100,e=b*d,c=0;return 1>e&&(c=(d-e)/(1-e)),[a[0],100*e,100*c]},k.hcg.rgb=function(a){var b=a[0]/360,d=a[1]/100,c=a[2]/100;if(0==d)return[255*c,255*c,255*c];var f=[0,0,0],g=6*(b%1),h=g%1,i=1-h,j=0;switch(e(g)){case 0:f[0]=1,f[1]=h,f[2]=0;break;case 1:f[0]=i,f[1]=1,f[2]=0;break;case 2:f[0]=0,f[1]=1,f[2]=h;break;case 3:f[0]=0,f[1]=i,f[2]=1;break;case 4:f[0]=h,f[1]=0,f[2]=1;break;default:f[0]=1,f[1]=0,f[2]=i;}return j=(1-d)*c,[255*(d*f[0]+j),255*(d*f[1]+j),255*(d*f[2]+j)]},k.hcg.hsv=function(a){var b=a[1]/100,c=a[2]/100,d=b+c*(1-b),e=0;return 0<d&&(e=b/d),[a[0],100*e,100*d]},k.hcg.hsl=function(a){var b=a[1]/100,c=a[2]/100,d=c*(1-b)+0.5*b,e=0;return 0<d&&0.5>d?e=b/(2*d):0.5<=d&&1>d&&(e=b/(2*(1-d))),[a[0],100*e,100*d]},k.hcg.hwb=function(a){var b=a[1]/100,c=a[2]/100,d=b+c*(1-b);return[a[0],100*(d-b),100*(1-d)]},k.hwb.hcg=function(a){var d=a[1]/100,e=a[2]/100,b=1-e,f=b-d,c=0;return 1>f&&(c=(b-f)/(1-f)),[a[0],100*f,100*c]},k.apple.rgb=function(a){return[255*(a[0]/65535),255*(a[1]/65535),255*(a[2]/65535)]},k.rgb.apple=function(a){return[65535*(a[0]/255),65535*(a[1]/255),65535*(a[2]/255)]},k.gray.rgb=function(a){return[255*(a[0]/100),255*(a[0]/100),255*(a[0]/100)]},k.gray.hsl=k.gray.hsv=function(a){return[0,0,a[0]]},k.gray.hwb=function(a){return[0,100,a[0]]},k.gray.cmyk=function(a){return[0,0,0,a[0]]},k.gray.lab=function(a){return[a[0],0,0]},k.gray.hex=function(a){var b=255&c(255*(a[0]/100)),d=((b<<16)+(b<<8)+b).toString(16).toUpperCase();return'000000'.substring(d.length)+d},k.rgb.gray=function(a){var b=(a[0]+a[1]+a[2])/3;return[100*(b/255)]}}),models$1=Object.keys(conversions);/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/// https://jsperf.com/object-keys-vs-for-in-with-closure/3
function buildGraph(){for(var a={},b=models$1.length,c=0;c<b;c++)a[models$1[c]]={// http://jsperf.com/1-vs-infinity
// micro-opt, but this is simple.
distance:-1,parent:null};return a}// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(a){var b=buildGraph(),c=[a];// unshift -> queue -> pop
for(b[a].distance=0;c.length;)for(var d=c.pop(),e=Object.keys(conversions[d]),f=e.length,g=0;g<f;g++){var h=e[g],i=b[h];-1===i.distance&&(i.distance=b[d].distance+1,i.parent=d,c.unshift(h))}return b}function link(a,b){return function(c){return b(a(c))}}function wrapConversion(a,b){for(var c=[b[a].parent,a],d=conversions[b[a].parent][a],e=b[a].parent;b[e].parent;)c.unshift(b[e].parent),d=link(conversions[b[e].parent][e],d),e=b[e].parent;return d.conversion=c,d}var route=function(a){for(var b=deriveBFS(a),c={},d=Object.keys(b),e=d.length,f=0;f<e;f++){var g=d[f],h=b[g];null!==h.parent&&(c[g]=wrapConversion(g,b))}return c},convert={},models=Object.keys(conversions);function wrapRaw(a){var b=function(b){return void 0===b||null===b?b:(1<arguments.length&&(b=Array.prototype.slice.call(arguments)),a(b))};// preserve .conversion property if there is one
return'conversion'in a&&(b.conversion=a.conversion),b}function wrapRounded(a){var b=function(b){if(void 0===b||null===b)return b;1<arguments.length&&(b=Array.prototype.slice.call(arguments));var c=a(b);// we're assuming the result is an array here.
// see notice in conversions.js; don't use box types
// in conversion functions.
if('object'==typeof c)for(var d=c.length,e=0;e<d;e++)c[e]=Math.round(c[e]);return c};// preserve .conversion property if there is one
return'conversion'in a&&(b.conversion=a.conversion),b}models.forEach(function(a){convert[a]={},Object.defineProperty(convert[a],'channels',{value:conversions[a].channels}),Object.defineProperty(convert[a],'labels',{value:conversions[a].labels});var b=route(a),c=Object.keys(b);c.forEach(function(c){var d=b[c];convert[a][c]=wrapRounded(d),convert[a][c].raw=wrapRaw(d)})});var colorConvert=convert,ansiStyles=createCommonjsModule(function(a){'use strict';const b=(a,b)=>function(){const c=a.apply(colorConvert,arguments);return`\u001B[${c+b}m`},c=(a,b)=>function(){const c=a.apply(colorConvert,arguments);return`\u001B[${38+b};5;${c}m`},d=(a,b)=>function(){const c=a.apply(colorConvert,arguments);return`\u001B[${38+b};2;${c[0]};${c[1]};${c[2]}m`};Object.defineProperty(a,'exports',{enumerable:!0,get:function assembleStyles(){const a={modifier:{reset:[0,0],// 21 isn't widely supported and 22 does the same thing
bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],// Bright color
redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],// Bright color
bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};// Fix humans
a.color.grey=a.color.gray,Object.keys(a).forEach((b)=>{const c=a[b];Object.keys(c).forEach((b)=>{const d=c[b];a[b]={open:`\u001B[${d[0]}m`,close:`\u001B[${d[1]}m`},c[b]=a[b]}),Object.defineProperty(a,b,{value:c,enumerable:!1})});const e=(a,c,d)=>[a,c,d];a.color.close='\x1B[39m',a.bgColor.close='\x1B[49m',a.color.ansi={},a.color.ansi256={},a.color.ansi16m={rgb:d(e,0)},a.bgColor.ansi={},a.bgColor.ansi256={},a.bgColor.ansi16m={rgb:d(e,10)};for(const e of Object.keys(colorConvert)){if('object'!=typeof colorConvert[e])continue;const f=colorConvert[e];'ansi16'in f&&(a.color.ansi[e]=b(f.ansi16,0),a.bgColor.ansi[e]=b(f.ansi16,10)),'ansi256'in f&&(a.color.ansi256[e]=c(f.ansi256,0),a.bgColor.ansi256[e]=c(f.ansi256,10)),'rgb'in f&&(a.color.ansi16m[e]=d(f.rgb,0),a.bgColor.ansi16m[e]=d(f.rgb,10))}return a}})});var hasFlag=function(a,b){b=b||process.argv;var c=b.indexOf('--'),d=/^-{1,2}/.test(a)?'':'--',e=b.indexOf(d+a);return-1!==e&&(!(-1!==c)||e<c)},supportsColor=createCommonjsModule(function(a){'use strict';const b=process.env;let c=(()=>{if(hasFlag('no-color')||hasFlag('no-colors')||hasFlag('color=false'))return 0;if(hasFlag('color=16m')||hasFlag('color=full')||hasFlag('color=truecolor'))return 3;if(hasFlag('color=256'))return 2;if(hasFlag('color')||hasFlag('colors')||hasFlag('color=true')||hasFlag('color=always'))return 1;if(process.stdout&&!process.stdout.isTTY)return 0;if('win32'===process.platform){// Node.js 7.5.0 is the first version of Node.js to include a patch to
// libuv that enables 256 color output on Windows. Anything earlier and it
// won't work. However, here we target Node.js 8 at minimum as it is an LTS
// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
// release that supports 256 colors.
const a=os.release().split('.');return 8<=+process.version.split('.')[0]&&10<=+a[0]&&10586<=+a[2]?2:1}if('CI'in b)return'TRAVIS'in b||'Travis'===b.CI||'CIRCLECI'in b?1:0;if('TEAMCITY_VERSION'in b)return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(b.TEAMCITY_VERSION)?1:0;if('TERM_PROGRAM'in b){const a=parseInt((b.TERM_PROGRAM_VERSION||'').split('.')[0],10);switch(b.TERM_PROGRAM){case'iTerm.app':return 3<=a?3:2;case'Hyper':return 3;case'Apple_Terminal':return 2;// No default
}}return /^(screen|xterm)-256(?:color)?/.test(b.TERM)?2:/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(b.TERM)?1:'COLORTERM'in b?1:'dumb'===b.TERM?0:0})();'FORCE_COLOR'in b&&(c=0===parseInt(b.FORCE_COLOR,10)?0:c||1),a.exports=process&&((a)=>0!==a&&{level:a,hasBasic:!0,has256:2<=a,has16m:3<=a})(c)}),templates=createCommonjsModule(function(a){'use strict';function unescape(a){return'u'===a[0]&&5===a.length||'x'===a[0]&&3===a.length?String.fromCharCode(parseInt(a.slice(1),16)):f.get(a)||a}function parseArguments(a,b){const c=[],f=b.trim().split(/\s*,\s*/g);let g;for(const h of f)if(!isNaN(h))c.push(+h);else if(g=h.match(d))c.push(g[2].replace(e,(a,b,c)=>b?unescape(b):c));else throw new Error(`Invalid Chalk template style argument: ${h} (in style '${a}')`);return c}function parseStyle(a){c.lastIndex=0;const b=[];for(let d;null!==(d=c.exec(a));){const a=d[1];if(d[2]){const c=parseArguments(a,d[2]);b.push([a].concat(c))}else b.push([a])}return b}function buildStyle(a,b){const c={};for(const d of b)for(const a of d.styles)c[a[0]]=d.inverse?null:a.slice(1);let d=a;for(const e of Object.keys(c))if(Array.isArray(c[e])){if(!(e in d))throw new Error(`Unknown Chalk style: ${e}`);d=0<c[e].length?d[e].apply(d,c[e]):d[e]}return d}const b=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,c=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,d=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,e=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,f=new Map([['n','\n'],['r','\r'],['t','\t'],['b','\b'],['f','\f'],['v','\x0B'],['0','\0'],['\\','\\'],['e','\x1B'],['a','\x07']]);a.exports=(a,c)=>{const d=[],e=[];let f=[];// eslint-disable-next-line max-params
if(c.replace(b,(b,c,g,h,i,j)=>{if(c)f.push(unescape(c));else if(h){const b=f.join('');f=[],e.push(0===d.length?b:buildStyle(a,d)(b)),d.push({inverse:g,styles:parseStyle(h)})}else if(i){if(0===d.length)throw new Error('Found extraneous } in Chalk template literal');e.push(buildStyle(a,d)(f.join(''))),f=[],d.pop()}else f.push(j)}),e.push(f.join('')),0<d.length){const a=`Chalk template literal is missing ${d.length} closing bracket${1===d.length?'':'s'} (\`}\`)`;throw new Error(a)}return e.join('')}}),chalk=createCommonjsModule(function(a){'use strict';function applyOptions(a,b){b=b||{};// Detect level if not set manually
const c=supportsColor?supportsColor.level:0;a.level=b.level===void 0?c:b.level,a.enabled='enabled'in b?b.enabled:0<a.level}function Chalk(a){// We check for this.template here since calling `chalk.constructor()`
// by itself will have a `this` of a previously constructed chalk object
if(!this||!(this instanceof Chalk)||this.template){const b={};return applyOptions(b,a),b.template=function(){const a=[].slice.call(arguments);return chalkTag.apply(null,[b.template].concat(a))},Object.setPrototypeOf(b,Chalk.prototype),Object.setPrototypeOf(b.template,b),b.template.constructor=Chalk,b.template}applyOptions(this,a)}// Use bright blue on Windows as the normal blue color is illegible
function build(a,b,c){const d=function(){return applyStyle.apply(d,arguments)};d._styles=a,d._empty=b;const e=this;// eslint-disable-line no-proto
return Object.defineProperty(d,'level',{enumerable:!0,get(){return e.level},set(a){e.level=a}}),Object.defineProperty(d,'enabled',{enumerable:!0,get(){return e.enabled},set(a){e.enabled=a}}),d.hasGrey=this.hasGrey||'gray'===c||'grey'===c,d.__proto__=f,d}function applyStyle(){// Support varags, but simply cast to string in case there's only one arg
const c=arguments,d=c.length;let e=arguments[0]+'';if(0===d)return'';if(1<d)// Don't slice `arguments`, it prevents V8 optimizations
for(let b=1;b<d;b++)e+=' '+c[b];if(!this.enabled||0>=this.level||!e)return this._empty?'':e;// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,
// see https://github.com/chalk/chalk/issues/58
// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.
const a=ansiStyles.dim.open;b&&this.hasGrey&&(ansiStyles.dim.open='');for(const a of this._styles.slice().reverse())e=a.open+e.replace(a.closeRe,a.open)+a.close,e=e.replace(/\r?\n/g,`${a.close}$&${a.open}`);// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue
return ansiStyles.dim.open=a,e}function chalkTag(a,b){if(!Array.isArray(b))// If chalk() was called by itself or with a string,
// return the string itself as a string.
return[].slice.call(arguments,1).join(' ');const c=[].slice.call(arguments,2),d=[b.raw[0]];for(let e=1;e<b.length;e++)d.push((c[e-1]+'').replace(/[{}\\]/g,'\\$&')),d.push(b.raw[e]+'');return templates(a,d.join(''))}const b='win32'===process.platform&&!(process.env.TERM||'').toLowerCase().startsWith('xterm'),c=['ansi','ansi','ansi256','ansi16m'],d=new Set(['gray']),e=Object.create(null);// `supportsColor.level` → `ansiStyles.color[name]` mapping
// `color-convert` models to exclude from the Chalk API due to conflicts and such
b&&(ansiStyles.blue.open='\x1B[94m');for(const b of Object.keys(ansiStyles))ansiStyles[b].closeRe=new RegExp(escapeStringRegexp(ansiStyles[b].close),'g'),e[b]={get(){const a=ansiStyles[b];return build.call(this,this._styles?this._styles.concat(a):[a],this._empty,b)}};e.visible={get(){return build.call(this,this._styles||[],!0,'visible')}},ansiStyles.color.closeRe=new RegExp(escapeStringRegexp(ansiStyles.color.close),'g');for(const b of Object.keys(ansiStyles.color.ansi))d.has(b)||(e[b]={get(){const a=this.level;return function(){const d=ansiStyles.color[c[a]][b].apply(null,arguments),e={open:d,close:ansiStyles.color.close,closeRe:ansiStyles.color.closeRe};return build.call(this,this._styles?this._styles.concat(e):[e],this._empty,b)}}});ansiStyles.bgColor.closeRe=new RegExp(escapeStringRegexp(ansiStyles.bgColor.close),'g');for(const b of Object.keys(ansiStyles.bgColor.ansi)){if(d.has(b))continue;const a='bg'+b[0].toUpperCase()+b.slice(1);e[a]={get(){const a=this.level;return function(){const d=ansiStyles.bgColor[c[a]][b].apply(null,arguments),e={open:d,close:ansiStyles.bgColor.close,closeRe:ansiStyles.bgColor.closeRe};return build.call(this,this._styles?this._styles.concat(e):[e],this._empty,b)}}}}const f=Object.defineProperties(()=>{},e);Object.defineProperties(Chalk.prototype,e),a.exports=Chalk(),a.exports.supportsColor=supportsColor,a.exports.default=a.exports}// For TypeScript
),vendor={ErlangTypes,Chalk:chalk};export default vendor;
